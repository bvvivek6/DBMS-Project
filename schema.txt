-- Users Table
CREATE TABLE Users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20) NOT NULL
);

-- Buses Table
CREATE TABLE Buses (
    bus_id INT PRIMARY KEY AUTO_INCREMENT,
    bus_name VARCHAR(255) NOT NULL,
    source VARCHAR(255) NOT NULL,
    destination VARCHAR(255) NOT NULL,
    total_seats INT NOT NULL,
    fare_per_seat FLOAT NOT NULL
);

-- Bookings Table
CREATE TABLE Bookings (
    booking_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    bus_id INT,
    booking_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    total_amount FLOAT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (bus_id) REFERENCES Buses(bus_id)
);

-- BookingDetails Table
CREATE TABLE BookingDetails (
    detail_id INT PRIMARY KEY AUTO_INCREMENT,
    booking_id INT,
    seat_number INT NOT NULL,
    fare FLOAT NOT NULL,
    FOREIGN KEY (booking_id) REFERENCES Bookings(booking_id)
);

-- User_Bus_Details Table (Denormalized summary)
CREATE TABLE User_Bus_Details (
    user_bus_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    bus_id INT,
    source VARCHAR(255) NOT NULL,
    destination VARCHAR(255) NOT NULL,
    seats_booked INT NOT NULL,
    total_amount FLOAT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (bus_id) REFERENCES Buses(bus_id)
);

-- Admin Table for managing administrative privileges
CREATE TABLE Admins (
    admin_id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);
CREATE TABLE  user_booking_{user_id} (
    booking_id INT NOT NULL,
    bus_id INT NOT NULL,
    bus_name VARCHAR(255) NOT NULL,
    source VARCHAR(255) NOT NULL,
    destination VARCHAR(255) NOT NULL,
    booking_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (booking_id),
    FOREIGN KEY (bus_id) REFERENCES Buses(bus_id)
);